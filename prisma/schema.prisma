// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Admin {
  id        Int       @id @default(autoincrement())
  password  String
  name      String
  roleId    Int       @map("role_id")
  role      AdminRole @relation(fields: [roleId], references: [id])
  isSuper   Boolean   @default(false) @map("is_super")
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("admins")
}

model AdminRole {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(0)

  admins               Admin[]
  adminRolePermissions AdminRolePermission[]

  @@map("admin_roles")
}

model AdminPermission {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(0)

  adminRolePermissions AdminRolePermission[]

  @@map("admin_permissions")
}

model AdminRolePermission {
  id           Int      @id @default(autoincrement())
  roleId       Int      @map("role_id")
  permissionId Int      @map("permission_id")
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt    DateTime @updatedAt @map("updated_at") @db.Timestamp(0)

  role       AdminRole       @relation(fields: [roleId], references: [id])
  permission AdminPermission @relation(fields: [permissionId], references: [id])

  @@map("admin_role_permissions")
}
